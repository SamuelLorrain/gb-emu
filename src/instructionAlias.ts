interface GBCommand {
    [index: string]: number
}

export const alias: GBCommand = {
    NOP: 0x00,
    LD_BC_D16: 0x01,
    LD_REF_BC_A: 0x02,
    INC_BC: 0x03,
    INC_B: 0x04,
    DEC_B: 0x05,
    LD_B_D8: 0x06,
    RLCA: 0x07,
    LD_REF_A16_SP: 0x08,
    ADD_HL_BC: 0x09,
    LD_A_REF_BC: 0x0a,
    DEC_BC: 0x0b,
    INC_C: 0x0c,
    DEC_C: 0x0d,
    LD_C_D8: 0x0e,
    RRCA: 0x0f,
    STOP_0: 0x10,
    LD_DE_D16: 0x11,
    LD_REF_DE_A: 0x12,
    INC_DE: 0x13,
    INC_D: 0x14,
    DEC_D: 0x15,
    LD_D_D8: 0x16,
    RLA: 0x17,
    JR_R8: 0x18,
    ADD_HL_DE: 0x19,
    LD_A_REF_DE: 0x1a,
    DEC_DE: 0x1b,
    INC_E: 0x1c,
    DEC_E: 0x1d,
    LD_E_D8: 0x1e,
    RRA: 0x1f,
    JR_NZ_R8: 0x20,
    LD_HL_D16: 0x21,
    LD_REF_HL_PLUS_A: 0x22,
    INC_HL: 0x23,
    INC_H: 0x24,
    DEC_H: 0x25,
    LD_H_D8: 0x26,
    DAA: 0x27,
    JR_Z_R8: 0x28,
    ADD_HL_HL: 0x29,
    LD_A_REF_HL_PLUS: 0x2a,
    DEC_HL: 0x2b,
    INC_L: 0x2c,
    DEC_L: 0x2d,
    LD_L_D8: 0x2e,
    CPL: 0x2f,
    JR_NC_R8: 0x30,
    LD_SP_D16: 0x31,
    LD_REF_HL_MINUS_A: 0x32,
    INC_SP: 0x33,
    INC_REF_HL: 0x34,
    DEC_REF_HL: 0x35,
    LD_REF_HL_D8: 0x36,
    SCF: 0x37,
    JR_C_R8: 0x38,
    ADD_HL_SP: 0x39,
    LD_A_REF_HL_MINUS: 0x3a,
    DEC_SP: 0x3b,
    INC_A: 0x3c,
    DEC_A: 0x3d,
    LD_A_D8: 0x3e,
    CCF: 0x3f,
    LD_B_B: 0x40,
    LD_B_C: 0x41,
    LD_B_D: 0x42,
    LD_B_E: 0x43,
    LD_B_H: 0x44,
    LD_B_L: 0x45,
    LD_B_REF_HL: 0x46,
    LD_B_A: 0x47,
    LD_C_B: 0x48,
    LD_C_C: 0x49,
    LD_C_D: 0x4a,
    LD_C_E: 0x4b,
    LD_C_H: 0x4c,
    LD_C_L: 0x4d,
    LD_C_REF_HL: 0x4e,
    LD_C_A: 0x4f,
    LD_D_B: 0x50,
    LD_D_C: 0x51,
    LD_D_D: 0x52,
    LD_D_E: 0x53,
    LD_D_H: 0x54,
    LD_D_L: 0x55,
    LD_D_REF_HL: 0x56,
    LD_D_A: 0x57,
    LD_E_B: 0x58,
    LD_E_C: 0x59,
    LD_E_D: 0x5a,
    LD_E_E: 0x5b,
    LD_E_H: 0x5c,
    LD_E_L: 0x5d,
    LD_E_REF_HL: 0x5e,
    LD_E_A: 0x5f,
    LD_H_B: 0x60,
    LD_H_C: 0x61,
    LD_H_D: 0x62,
    LD_H_E: 0x63,
    LD_H_H: 0x64,
    LD_H_L: 0x65,
    LD_H_REF_HL: 0x66,
    LD_H_A: 0x67,
    LD_L_B: 0x68,
    LD_L_C: 0x69,
    LD_L_D: 0x6a,
    LD_L_E: 0x6b,
    LD_L_H: 0x6c,
    LD_L_L: 0x6d,
    LD_L_REF_HL: 0x6e,
    LD_L_A: 0x6f,
    LD_REF_HL_B: 0x70,
    LD_REF_HL_C: 0x71,
    LD_REF_HL_D: 0x72,
    LD_REF_HL_E: 0x73,
    LD_REF_HL_H: 0x74,
    LD_REF_HL_L: 0x75,
    HALT: 0x76,
    LD_REF_HL_A: 0x77,
    LD_A_B: 0x78,
    LD_A_C: 0x79,
    LD_A_D: 0x7a,
    LD_A_E: 0x7b,
    LD_A_H: 0x7c,
    LD_A_L: 0x7d,
    LD_A_REF_HL: 0x7e,
    LD_A_A: 0x7f,
    ADD_A_B: 0x80,
    ADD_A_C: 0x81,
    ADD_A_D: 0x82,
    ADD_A_E: 0x83,
    ADD_A_H: 0x84,
    ADD_A_L: 0x85,
    ADD_A_REF_HL: 0x86,
    ADD_A_A: 0x87,
    ADC_A_B: 0x88,
    ADC_A_C: 0x89,
    ADC_A_D: 0x8a,
    ADC_A_E: 0x8b,
    ADC_A_H: 0x8c,
    ADC_A_L: 0x8d,
    ADC_A_REF_HL: 0x8e,
    ADC_A_A: 0x8f,
    SUB_B: 0x90,
    SUB_C: 0x91,
    SUB_D: 0x92,
    SUB_E: 0x93,
    SUB_H: 0x94,
    SUB_L: 0x95,
    SUB_REF_HL: 0x96,
    SUB_A: 0x97,
    SBC_A_B: 0x98,
    SBC_A_C: 0x99,
    SBC_A_D: 0x9a,
    SBC_A_E: 0x9b,
    SBC_A_H: 0x9c,
    SBC_A_L: 0x9d,
    SBC_A_REF_HL: 0x9e,
    SBC_A_A: 0x9f,
    AND_B: 0xa0,
    AND_C: 0xa1,
    AND_D: 0xa2,
    AND_E: 0xa3,
    AND_H: 0xa4,
    AND_L: 0xa5,
    AND_REF_HL: 0xa6,
    AND_A: 0xa7,
    XOR_B: 0xa8,
    XOR_C: 0xa9,
    XOR_D: 0xaa,
    XOR_E: 0xab,
    XOR_H: 0xac,
    XOR_L: 0xad,
    XOR_REF_HL: 0xae,
    XOR_A: 0xaf,
    OR_B: 0xb0,
    OR_C: 0xb1,
    OR_D: 0xb2,
    OR_E: 0xb3,
    OR_H: 0xb4,
    OR_L: 0xb5,
    OR_REF_HL: 0xb6,
    OR_A: 0xb7,
    CP_B: 0xb8,
    CP_C: 0xb9,
    CP_D: 0xba,
    CP_E: 0xbb,
    CP_H: 0xbc,
    CP_L: 0xbd,
    CP_REF_HL: 0xbe,
    CP_A: 0xbf,
    RET_NZ: 0xc0,
    POP_BC: 0xc1,
    JP_NZ_A16: 0xc2,
    JP_A16: 0xc3,
    CALL_NZ_A16: 0xc4,
    PUSH_BC: 0xc5,
    ADD_A_D8: 0xc6,
    RST_00H: 0xc7,
    RET_Z: 0xc8,
    RET: 0xc9,
    JP_Z_A16: 0xca,
    PREFIX_CB: 0xcb,
    CALL_Z_A16: 0xcc,
    CALL_A16: 0xcd,
    ADC_A_D8: 0xce,
    RST_08h: 0xcf,
    RET_NC: 0xd0,
    POP_DE: 0xd1,
    JP_NC_A16: 0xd2,
    NOP_D3: 0xd3,
    CALL_NC_A16: 0xd4,
    PUSH_DE: 0xd5,
    SUB_D8: 0xd6,
    RST_10H: 0xd7,
    RET_C: 0xd8,
    RETI: 0xd9,
    JP_C_A16: 0xda,
    NOP_DB: 0xdb,
    CALL_C_A16: 0xdc,
    NOP_DD: 0xdd,
    SBC_A_D8: 0xde,
    RST_18H: 0xdf,
    LD_REF_A8_A: 0xe0,
    POP_HL: 0xe1,
    LD_REF_C_A: 0xe2,
    NOP_E3: 0xe3,
    NOP_E4: 0xe4,
    PUSH_HL: 0xe5,
    AND_D8: 0xe6,
    RST_20H: 0xe7,
    ADD_SP_R8: 0xe8,
    JP_REF_HL: 0xe9,
    LD_REF_A16_A: 0xea,
    NOP_EB: 0xeb,
    NOP_EC: 0xec,
    NOP_ED: 0xed,
    XOR_D8: 0xee,
    RST_28H: 0xef,
    LDH_A_REF_A8: 0xf0,
    POP_AF: 0xf1,
    LD_A_REF_C: 0xf2,
    DI: 0xf3,
    NOP_F4: 0xf4,
    PUSH_AF: 0xf5,
    OR_D8: 0xf6,
    RST_30H: 0xf7,
    LD_HL_SP_PLUS_R8: 0xf8,
    LD_SP_HL: 0xf9,
    LD_A_REF_A16: 0xfa,
    EI: 0xfb,
    NOP_FC: 0xfc,
    NOP_FD: 0xfd,
    CP_D8: 0xfe,
    RST_38H: 0xff,
};

// export const prefixGB: GBCommand = {
    // RLC_B: 0x00,
    // RLC_C: 0x01,
    // RLC_D: 0x02,
    // RLC_E: 0x03,
    // RLC_H: 0x04,
    // RLC_L: 0x05,
    // RLC_REF_HL: 0x06,
    // RLC_A: 0x07,
    // RRC_B: 0x08,
    // RRC_C: 0x09,
    // RRC_D: 0x0a,
    // RRC_E: 0x0b,
    // RRC_H: 0x0c,
    // RRC_L: 0x0d,
    // RRC_REF_HL: 0x0e,
    // RRC_A: 0x0f,
    // RLC_B: 0x10,
    // RLC_B: 0x11,
    // RLC_B: 0x12,
    // RLC_B: 0x13,
    // RLC_B: 0x14,
    // RLC_B: 0x15,
    // RLC_B: 0x16,
    // RLC_B: 0x17,
    // RLC_B: 0x18,
    // RLC_B: 0x19,
    // RLC_B: 0x1a,
    // RLC_B: 0x1b,
    // RLC_B: 0x1c,
    // RLC_B: 0x1d,
    // RLC_B: 0x1e,
    // RLC_B: 0x1f,
    // RLC_B: 0x20,
    // RLC_B: 0x21,
    // RLC_B: 0x22,
    // RLC_B: 0x23,
    // RLC_B: 0x24,
    // RLC_B: 0x25,
    // RLC_B: 0x26,
    // RLC_B: 0x27,
    // RLC_B: 0x28,
    // RLC_B: 0x29,
    // RLC_B: 0x2a,
    // RLC_B: 0x2b,
    // RLC_B: 0x2c,
    // RLC_B: 0x2d,
    // RLC_B: 0x2e,
    // RLC_B: 0x2f,
    // RLC_B: 0x30,
    // RLC_B: 0x31,
    // RLC_B: 0x32,
    // RLC_B: 0x33,
    // RLC_B: 0x34,
    // RLC_B: 0x35,
    // RLC_B: 0x36,
    // RLC_B: 0x37,
    // RLC_B: 0x38,
    // RLC_B: 0x39,
    // RLC_B: 0x3a,
    // RLC_B: 0x3b,
    // RLC_B: 0x3c,
    // RLC_B: 0x3d,
    // RLC_B: 0x3e,
    // RLC_B: 0x3f,
    // RLC_B: 0x40,
    // RLC_B: 0x41,
    // RLC_B: 0x42,
    // RLC_B: 0x43,
    // RLC_B: 0x44,
    // RLC_B: 0x45,
    // RLC_B: 0x46,
    // RLC_B: 0x47,
    // RLC_B: 0x48,
    // RLC_B: 0x49,
    // RLC_B: 0x4a,
    // RLC_B: 0x4b,
    // RLC_B: 0x4c,
    // RLC_B: 0x4d,
    // RLC_B: 0x4e,
    // RLC_B: 0x4f,
    // RLC_B: 0x50,
    // RLC_B: 0x51,
    // RLC_B: 0x52,
    // RLC_B: 0x53,
    // RLC_B: 0x54,
    // RLC_B: 0x55,
    // RLC_B: 0x56,
    // RLC_B: 0x57,
    // RLC_B: 0x58,
    // RLC_B: 0x59,
    // RLC_B: 0x5a,
    // RLC_B: 0x5b,
    // RLC_B: 0x5c,
    // RLC_B: 0x5d,
    // RLC_B: 0x5e,
    // RLC_B: 0x5f,
    // RLC_B: 0x60,
    // RLC_B: 0x61,
    // RLC_B: 0x62,
    // RLC_B: 0x63,
    // RLC_B: 0x64,
    // RLC_B: 0x65,
    // RLC_B: 0x66,
    // RLC_B: 0x67,
    // RLC_B: 0x68,
    // RLC_B: 0x69,
    // RLC_B: 0x6a,
    // RLC_B: 0x6b,
    // RLC_B: 0x6c,
    // RLC_B: 0x6d,
    // RLC_B: 0x6e,
    // RLC_B: 0x6f,
    // RLC_B: 0x70,
    // RLC_B: 0x71,
    // RLC_B: 0x72,
    // RLC_B: 0x73,
    // RLC_B: 0x74,
    // RLC_B: 0x75,
    // RLC_B: 0x76,
    // RLC_B: 0x77,
    // RLC_B: 0x78,
    // RLC_B: 0x79,
    // RLC_B: 0x7a,
    // RLC_B: 0x7b,
    // RLC_B: 0x7c,
    // RLC_B: 0x7d,
    // RLC_B: 0x7e,
    // RLC_B: 0x7f,
    // RLC_B: 0x80,
    // RLC_B: 0x81,
    // RLC_B: 0x82,
    // RLC_B: 0x83,
    // RLC_B: 0x84,
    // RLC_B: 0x85,
    // RLC_B: 0x86,
    // RLC_B: 0x87,
    // RLC_B: 0x88,
    // RLC_B: 0x89,
    // RLC_B: 0x8a,
    // RLC_B: 0x8b,
    // RLC_B: 0x8c,
    // RLC_B: 0x8d,
    // RLC_B: 0x8e,
    // RLC_B: 0x8f,
    // RLC_B: 0x90,
    // RLC_B: 0x91,
    // RLC_B: 0x92,
    // RLC_B: 0x93,
    // RLC_B: 0x94,
    // RLC_B: 0x95,
    // RLC_B: 0x96,
    // RLC_B: 0x97,
    // RLC_B: 0x98,
    // RLC_B: 0x99,
    // RLC_B: 0x9a,
    // RLC_B: 0x9b,
    // RLC_B: 0x9c,
    // RLC_B: 0x9d,
    // RLC_B: 0x9e,
    // RLC_B: 0x9f,
    // RLC_B: 0xa0,
    // RLC_B: 0xa1,
    // RLC_B: 0xa2,
    // RLC_B: 0xa3,
    // RLC_B: 0xa4,
    // RLC_B: 0xa5,
    // RLC_B: 0xa6,
    // RLC_B: 0xa7,
    // RLC_B: 0xa8,
    // RLC_B: 0xa9,
    // RLC_B: 0xaa,
    // RLC_B: 0xab,
    // RLC_B: 0xac,
    // RLC_B: 0xad,
    // RLC_B: 0xae,
    // RLC_B: 0xaf,
    // RLC_B: 0xb0,
    // RLC_B: 0xb1,
    // RLC_B: 0xb2,
    // RLC_B: 0xb3,
    // RLC_B: 0xb4,
    // RLC_B: 0xb5,
    // RLC_B: 0xb6,
    // RLC_B: 0xb7,
    // RLC_B: 0xb8,
    // RLC_B: 0xb9,
    // RLC_B: 0xba,
    // RLC_B: 0xbb,
    // RLC_B: 0xbc,
    // RLC_B: 0xbd,
    // RLC_B: 0xbe,
    // RLC_B: 0xbf,
    // RLC_B: 0xc0,
    // RLC_B: 0xc1,
    // RLC_B: 0xc2,
    // RLC_B: 0xc3,
    // RLC_B: 0xc4,
    // RLC_B: 0xc5,
    // RLC_B: 0xc6,
    // RLC_B: 0xc7,
    // RLC_B: 0xc8,
    // RLC_B: 0xc9,
    // RLC_B: 0xca,
    // RLC_B: 0xcb,
    // RLC_B: 0xcc,
    // RLC_B: 0xcd,
    // RLC_B: 0xce,
    // RLC_B: 0xcf,
    // RLC_B: 0xd0,
    // RLC_B: 0xd1,
    // RLC_B: 0xd2,
    // RLC_B: 0xd3,
    // RLC_B: 0xd4,
    // RLC_B: 0xd5,
    // RLC_B: 0xd6,
    // RLC_B: 0xd7,
    // RLC_B: 0xd8,
    // RLC_B: 0xd9,
    // RLC_B: 0xda,
    // RLC_B: 0xdb,
    // RLC_B: 0xdc,
    // RLC_B: 0xdd,
    // RLC_B: 0xde,
    // RLC_B: 0xdf,
    // RLC_B: 0xe0,
    // RLC_B: 0xe1,
    // RLC_B: 0xe2,
    // RLC_B: 0xe3,
    // RLC_B: 0xe4,
    // RLC_B: 0xe5,
    // RLC_B: 0xe6,
    // RLC_B: 0xe7,
    // RLC_B: 0xe8,
    // RLC_B: 0xe9,
    // RLC_B: 0xea,
    // RLC_B: 0xeb,
    // RLC_B: 0xec,
    // RLC_B: 0xed,
    // RLC_B: 0xee,
    // RLC_B: 0xef,
    // RLC_B: 0xf0,
    // RLC_B: 0xf1,
    // RLC_B: 0xf2,
    // RLC_B: 0xf3,
    // RLC_B: 0xf4,
    // RLC_B: 0xf5,
    // RLC_B: 0xf6,
    // RLC_B: 0xf7,
    // RLC_B: 0xf8,
    // RLC_B: 0xf9,
    // RLC_B: 0xfa,
    // RLC_B: 0xfb,
    // RLC_B: 0xfc,
    // RLC_B: 0xfd,
    // RLC_B: 0xfe,
    // RLC_B: 0xff,
// };
